{% comment %}
Do not force redirect! Just optionally display a message if user is not logged in.
{% endcomment %}
{% if customer == nil %}
  <p style="text-align:center;padding:2rem;font-size:1.2em;">Inicie sess√£o para guardar produtos nos favoritos.</p>
{% endif %}

<style>

#MainContent > main > h1 {
        margin-left: 20px;
      font-weight: 500;
      font-size: 16px;
      letter-spacing: .56px;
      margin-bottom: 0px!important;
}
  
.product-card { position: relative; }
.wishlist-toggle {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: transparent;
  border: none;
  cursor: pointer;
}
.heart-icon { pointer-events: none; }

  
  .card__content {
    width: 100%;
  }
  .title-cheyenne {
    font-family: "Figtree", Arial, Helvetica, sans-serif;
    display: inline-block;
    color: black;
    width: 95%;
    text-decoration: none;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-right: 5%;
    font-size: 13px;
    font-weight: 500;
    line-height: 16px;
  }
  
  /* Temporary CSS to help ensure proper Swiper behavior */
  .swiper-container {
    width: 100%;
    overflow: hidden;
    pointer-events: auto; /* Ensure pointer events are allowed */
    touch-action: auto; /* Let the browser decide (default behavior) */
  }
  .swiper-wrapper {
    display: flex;
    transition-property: transform;
    z-index: 10;
    position: relative;
  }
  .swiper-slide {
    width: 100%;
  }
  .swiper-pagination-bullet {
    display: none;
  }
</style>

{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'swatches-cheyenne.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}
  {{ 'swatches-cheyenne.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'quick-order-list.css' | asset_url | stylesheet_tag }}
  {{ 'quantity-popover.css' | asset_url | stylesheet_tag }}


<main class="page-width">
  <h1 class="section-header">Favoritos</h1>
  <div class="collection page-width">
    <ul id="product-grid" class="grid product-grid grid--2-col-tablet-down grid--6-col-desktop">
      <!-- Wishlist product cards loaded here -->
    </ul>
  </div>
</main>

<script>
document.addEventListener('DOMContentLoaded', async () => {
  const grid = document.getElementById('product-grid');
  grid.innerHTML = 'A carregar favoritos...';

  // Try fetching, even if not logged in
  let data = { products: [] };
  try {
    const res = await fetch('/apps/wishlist?action=get', { credentials: 'include' });
    if (!res.ok) throw new Error('Wishlist request failed');
    data = await res.json();
  } catch (err) {
    console.error('Failed to load wishlist', err);
    grid.innerHTML = '<p>No items in wishlist.</p>';
    return;
  }

  if (!data.products || data.products.length === 0) {
    grid.innerHTML = '<p>No items in wishlist.</p>';
    return;
  }

  const productsHTML = await Promise.all(data.products.map(handle =>
    fetch(`/products/${handle}?view=wishlist-card`).then(r => r.text())
  ));

  grid.innerHTML = '';
  productsHTML.forEach(html => {
    const wrapper = document.createElement('div');
    wrapper.innerHTML = html.trim();
    const card = wrapper.querySelector('.product-card-wrapper');
    if (card) {
      const li = document.createElement('li');
      li.className = 'grid__item';
      li.appendChild(card);
      grid.appendChild(li);
    }
  });

  if (typeof initializeProductCardSwipers === 'function') {
    initializeProductCardSwipers();
  }
});
</script>

<script>
function initializeProductCardSwipers() {
  if (typeof Swiper === 'undefined') {
    console.error('Swiper is not loaded. Please include Swiper JS library.');
    return;
  }
  var productCards = document.querySelectorAll('.product-card-wrapper');
  productCards.forEach(function(card, index) {
    var swiperContainer = card.querySelector('.swiper-container');
    if (!swiperContainer) {
      console.log('No swiper container found for card', index);
      return;
    }
    swiperContainer.style.touchAction = 'auto';
    new Swiper(swiperContainer, {
      slidesPerView: 1,
      spaceBetween: 0,
      allowTouchMove: true,
      touchEventsTarget: 'container',
      pagination: {
        el: card.querySelector('.swiper-pagination'),
        clickable: true,
      },
      simulateTouch: true,
      touchRatio: 1,
      grabCursor: true,
      threshold: 0,
      on: {
        init: function() {
          setTimeout(() => { this.update(); }, 1000);
        }
      }
    });
  });
}
document.addEventListener('DOMContentLoaded', function() {
  initializeProductCardSwipers();
  var productGridContainer = document.getElementById('ProductGridContainer');
  if (productGridContainer) {
    productGridContainer.addEventListener('click', function(e) {
      var swatchEl = e.target.closest('.swatch');
      if (!swatchEl) return;
      var card = swatchEl.closest('.product-card-wrapper');
      if (!card) return;
      card.querySelectorAll('.swatch').forEach(function(el) {
        el.classList.remove('active');
      });
      swatchEl.classList.add('active');
      var newImage = swatchEl.getAttribute('data-variant-image');
      if (!newImage) return;
      var mediaContainer = card.querySelector('.card__media');
      if (!mediaContainer) return;
      var img = card.querySelector('.swiper-slide-active img') || mediaContainer.querySelector('img');
      if (img) {
        img.src = newImage;
        img.srcset = newImage;
      }
    });
  }
});
</script>
