{%- comment -%}
  SNIPPET: size-guide.liquid
  - Mostra link "Guia de tamanhos"; ao clicar, abre um drawer.
  - Procura nas tags algo do tipo "sizechart:IDENTIFICADOR" para escolher a tabela.
  - Exemplos incluídos: hoodie, tshirt, calcas. (valores em CM)
  - Comutador CM/IN com conversão automática.
{%- endcomment -%}

{%- if product -%}
  {%- assign sg_id = 'sg-' | append: product.id -%}

  {%- comment %} descobrir a chave da tabela nas tags {% endcomment -%}
  {%- assign sizechart_key = '' -%}
  {%- for tag in product.tags -%}
    {%- if tag contains 'sizechart:' -%}
      {%- assign sizechart_key = tag | split: ':' | last | downcase | strip -%}
      {%- break -%}
    {%- endif -%}
  {%- endfor -%}

  {%- comment %} LINK que abre o drawer (pedido do utilizador) {% endcomment -%}
  <a href="#{{ sg_id }}" class="sg-link" data-sg-open="{{ sg_id }}" aria-controls="{{ sg_id }}" aria-expanded="false">
    Guia de tamanhos
  </a>

  {%- comment %} DRAWER {% endcomment -%}
  <div class="sg-root" id="{{ sg_id }}" hidden role="dialog" aria-modal="true" aria-label="Guia de tamanhos">
    <div class="sg-overlay" data-sg-close></div>
    <aside class="sg-panel" tabindex="-1">
      <header class="sg-header">
        <h3 class="sg-title">Dimensões do produto</h3>
        <button class="sg-close" type="button" data-sg-close aria-label="Fechar">✕</button>
      </header>

      <div class="sg-media">
        {%- assign first_media = product.featured_media | default: product.media.first -%}
        {%- if first_media -%}
          <img
            class="sg-img"
            alt="{{ first_media.alt | default: product.title | escape }}"
            loading="lazy"
            src="{{ first_media | image_url: width: 900 }}"
            srcset="{{ first_media | image_url: width: 450 }} 450w, {{ first_media | image_url: width: 700 }} 700w, {{ first_media | image_url: width: 900 }} 900w"
            sizes="(max-width: 740px) 100vw, 600px">
        {%- else -%}
          <div class="sg-img sg-img--placeholder" aria-hidden="true"></div>
        {%- endif -%}
      </div>

      <p class="sg-note">As medidas podem apresentar pequenas variações devido ao processo de produção. A peça de roupa está medida esticada.</p>

      <div class="sg-unit-switch" role="tablist" aria-label="Unidades">
        <button class="sg-unit is-active" data-sg-unit="cm" role="tab" aria-selected="true">CM</button>
        <button class="sg-unit" data-sg-unit="in" role="tab" aria-selected="false">IN</button>
      </div>

      <div class="sg-table-wrap" data-sg-table>
        {%- case sizechart_key -%}

          {%- when 'hoodie' -%}
          <table class="sg-table" aria-label="Tabela de tamanhos: Hoodie">
            <thead>
              <tr>
                <th scope="col">Zona</th>
                <th scope="col">M</th>
                <th scope="col">L</th>
                <th scope="col">XL</th>
                <th scope="col">XXL</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <th scope="row">Peito</th>
                <td data-cm="61">61</td><td data-cm="64">64</td><td data-cm="67">67</td><td data-cm="70">70</td>
              </tr>
              <tr>
                <th scope="row">Comprimento à frente</th>
                <td data-cm="68.5">68.5</td><td data-cm="70">70</td><td data-cm="71">71</td><td data-cm="72">72</td>
              </tr>
              <tr>
                <th scope="row">Comprimento da manga</th>
                <td data-cm="63.5">63.5</td><td data-cm="64">64</td><td data-cm="65">65</td><td data-cm="66">66</td>
              </tr>
              <tr>
                <th scope="row">Largura das costas</th>
                <td data-cm="53">53</td><td data-cm="55.5">55.5</td><td data-cm="58">58</td><td data-cm="60.5">60.5</td>
              </tr>
              <tr>
                <th scope="row">Largura do braço</th>
                <td data-cm="26">26</td><td data-cm="27">27</td><td data-cm="28">28</td><td data-cm="29">29</td>
              </tr>
            </tbody>
          </table>

          {%- when 'tshirt' -%}
          <table class="sg-table" aria-label="Tabela de tamanhos: T-shirt">
            <thead>
              <tr>
                <th>Zona</th><th>S</th><th>M</th><th>L</th><th>XL</th><th>XXL</th>
              </tr>
            </thead>
            <tbody>
              <tr><th scope="row">Peito</th>
                <td data-cm="50">50</td><td data-cm="53">53</td><td data-cm="56">56</td><td data-cm="59">59</td><td data-cm="62">62</td>
              </tr>
              <tr><th scope="row">Comprimento</th>
                <td data-cm="70">70</td><td data-cm="72">72</td><td data-cm="74">74</td><td data-cm="76">76</td><td data-cm="78">78</td>
              </tr>
              <tr><th scope="row">Manga</th>
                <td data-cm="20">20</td><td data-cm="21">21</td><td data-cm="22">22</td><td data-cm="23">23</td><td data-cm="24">24</td>
              </tr>
            </tbody>
          </table>

          {%- when 'calcas' -%}
          <table class="sg-table" aria-label="Tabela de tamanhos: Calças">
            <thead>
              <tr>
                <th>Zona</th><th>28</th><th>30</th><th>32</th><th>34</th><th>36</th>
              </tr>
            </thead>
            <tbody>
              <tr><th scope="row">Cintura</th>
                <td data-cm="72">72</td><td data-cm="77">77</td><td data-cm="82">82</td><td data-cm="87">87</td><td data-cm="92">92</td>
              </tr>
              <tr><th scope="row">Anca</th>
                <td data-cm="92">92</td><td data-cm="97">97</td><td data-cm="102">102</td><td data-cm="107">107</td><td data-cm="112">112</td>
              </tr>
              <tr><th scope="row">Comprimento (entrepernas)</th>
                <td data-cm="76">76</td><td data-cm="78">78</td><td data-cm="80">80</td><td data-cm="82">82</td><td data-cm="84">84</td>
              </tr>
            </tbody>
          </table>

          {%- else -%}
          <div class="sg-empty">
            <p><strong>Sem tabela específica</strong></p>
            <p>Adiciona uma tag como <code>sizechart:hoodie</code>, <code>sizechart:tshirt</code> ou <code>sizechart:calcas</code> para mostrar a tabela correta.</p>
          </div>
        {%- endcase -%}
      </div>

      <p class="sg-howto">
        Consulta <a href="/pages/como-medir" target="_blank" rel="noopener">como medir a peça de roupa</a>.
      </p>
    </aside>
  </div>

  <style>
    .sg-link{background:transparent;border:0;padding:0;color:inherit;text-decoration:underline;cursor:pointer}
    .sg-root{position:fixed;inset:0;z-index:9999;display:grid;grid-template-columns:1fr;align-items:stretch}
    .sg-root[hidden]{display:none}
    .sg-overlay{background:rgba(0,0,0,.45)}
    .sg-panel{
      position:fixed;top:0;right:0;height:100%;width:min(720px,100%);
      background:#fff;box-shadow:-12px 0 30px rgba(0,0,0,.2);
      display:flex;flex-direction:column;gap:16px;padding:20px;overflow:auto
    }
    .sg-header{display:flex;align-items:center;justify-content:space-between}
    .sg-title{margin:0;font-size:18px}
    .sg-close{background:#f2f2f2;border:1px solid #e5e5e5;border-radius:10px;padding:6px 10px;cursor:pointer}
    .sg-media{display:flex;justify-content:center}
    .sg-img{max-width:420px;width:100%;height:auto;border-radius:8px;background:#f3f4f6}
    .sg-img--placeholder{width:320px;height:420px;border-radius:8px;background:linear-gradient(90deg,#f3f4f6,#eee,#f3f4f6)}
    .sg-note{font-size:13px;color:#666;margin:0}
    .sg-unit-switch{display:flex;gap:8px;margin-top:4px}
    .sg-unit{border:1px solid #e5e5e5;background:#f8f9fb;border-radius:8px;padding:6px 10px;cursor:pointer}
    .sg-unit.is-active{border-color:#111;background:#fff;font-weight:600}
    .sg-table{width:100%;border-collapse:collapse;margin-top:8px}
    .sg-table th,.sg-table td{border-top:1px solid #e5e7eb;padding:10px 8px;text-align:center;font-size:14px}
    .sg-table th[scope="row"]{text-align:left;font-weight:500;color:#111}
    .sg-table thead th{font-weight:600;color:#111;background:#fafafa}
    .sg-empty{background:#fff7ed;border:1px solid #ffedd5;padding:12px;border-radius:10px}
    .sg-howto{font-size:14px;color:#555}
    @media (max-width:740px){.sg-panel{padding:16px}.sg-img{max-width:100%}}
  </style>

  <script>
  (function(){
    const id = "{{ sg_id }}";
    const root = document.getElementById(id);
    const openLink = document.querySelector('[data-sg-open="'+id+'"]');
    if(!root || !openLink) return;

    const panel = root.querySelector('.sg-panel');
    const overlay = root.querySelector('.sg-overlay');
    const closeBtns = root.querySelectorAll('[data-sg-close]');
    const unitBtns = root.querySelectorAll('.sg-unit');
    const tableWrap = root.querySelector('[data-sg-table]');

    function trapFocus(e){
      if(e.key !== 'Tab') return;
      const focusable = root.querySelectorAll('button,[href],input,select,textarea,[tabindex]:not([tabindex="-1"])');
      const first = focusable[0], last = focusable[focusable.length - 1];
      if(e.shiftKey && document.activeElement === first){ last.focus(); e.preventDefault(); }
      else if(!e.shiftKey && document.activeElement === last){ first.focus(); e.preventDefault(); }
    }

    function openDrawer(){
      root.hidden = false;
      document.documentElement.style.overflow = 'hidden';
      openLink.setAttribute('aria-expanded','true');
      panel.focus();
      document.addEventListener('keydown', onKeydown);
      document.addEventListener('keydown', trapFocus);
    }
    function closeDrawer(){
      root.hidden = true;
      document.documentElement.style.overflow = '';
      openLink.setAttribute('aria-expanded','false');
      openLink.focus();
      document.removeEventListener('keydown', onKeydown);
      document.removeEventListener('keydown', trapFocus);
    }
    function onKeydown(e){ if(e.key === 'Escape') closeDrawer(); }

    openLink.addEventListener('click', function(e){ e.preventDefault(); openDrawer(); });
    overlay.addEventListener('click', closeDrawer);
    closeBtns.forEach(b=> b.addEventListener('click', closeDrawer));

    // Conversão CM <-> IN
    function toIn(cm){ return (parseFloat(cm)/2.54).toFixed(1); }
    function renderUnit(unit){
      const cells = tableWrap ? tableWrap.querySelectorAll('td[data-cm]') : [];
      cells.forEach(td=>{
        const cm = td.getAttribute('data-cm');
        td.textContent = unit === 'cm' ? cm : toIn(cm);
      });
      unitBtns.forEach(btn=>{
        const active = btn.getAttribute('data-sg-unit') === unit;
        btn.classList.toggle('is-active', active);
        btn.setAttribute('aria-selected', active ? 'true' : 'false');
      });
    }
    unitBtns.forEach(btn=> btn.addEventListener('click', ()=> renderUnit(btn.getAttribute('data-sg-unit')) ));
    renderUnit('cm');
  })();
  </script>
{%- endif -%}
