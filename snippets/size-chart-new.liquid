{%- comment -%}
  SNIPPET: size-guide.liquid
  - Renderiza link "Guia de tamanhos"; abre um drawer ao clicar.
  - Lê tag "sizechart:IDENT" (ex.: camisola, tshirt, calcas) para escolher a tabela.
  - A tabela tem 1ª coluna fixa ("ZONA") e as colunas de tamanhos com swipe/scroll horizontal.
  - Comutador CM/IN com conversão automática (valores base em CM).
{%- endcomment -%}

{%- if product -%}
  {%- assign sg_id = 'sg-' | append: product.id -%}

  {%- assign sizechart_key = '' -%}
  {%- for tag in product.tags -%}
    {%- if tag contains 'sizechart:' -%}
      {%- assign sizechart_key = tag | split: ':' | last | downcase | strip -%}
      {%- break -%}
    {%- endif -%}
  {%- endfor -%}

  <a href="#{{ sg_id }}" class="sg-link" data-sg-open="{{ sg_id }}" aria-controls="{{ sg_id }}" aria-expanded="false">
    Guia de tamanhos
  </a>

  <div class="sg-root" id="{{ sg_id }}" hidden role="dialog" aria-modal="true" aria-label="Guia de tamanhos">
    <div class="sg-overlay" data-sg-close></div>
    <aside class="sg-panel" tabindex="-1">
      <header class="sg-header">
        <h3 class="sg-title">Dimensões do produto</h3>
        <button class="sg-close" type="button" data-sg-close aria-label="Fechar">✕</button>
      </header>

      <div class="sg-media">
        {%- assign first_media = product.featured_media | default: product.media.first -%}
        {%- if first_media -%}
          <img class="sg-img"
               alt="{{ first_media.alt | default: product.title | escape }}"
               loading="lazy"
               src="{{ first_media | image_url: width: 900 }}"
               srcset="{{ first_media | image_url: width: 450 }} 450w, {{ first_media | image_url: width: 700 }} 700w, {{ first_media | image_url: width: 900 }} 900w"
               sizes="(max-width: 740px) 100vw, 600px">
        {%- else -%}
          <div class="sg-img sg-img--placeholder" aria-hidden="true"></div>
        {%- endif -%}
      </div>

      <p class="sg-note">As medidas podem apresentar pequenas variações devido ao processo de produção. A peça de roupa está medida esticada.</p>

      <div class="sg-unit-switch" role="tablist" aria-label="Unidades">
        <button class="sg-unit is-active" data-sg-unit="cm" role="tab" aria-selected="true">CM</button>
        <button class="sg-unit" data-sg-unit="in" role="tab" aria-selected="false">IN</button>
      </div>

      <div class="sg-table-wrap" data-sg-table>
        {%- case sizechart_key -%}

          {%- when 'camisola' -%}
          <div class="sg-scroll" data-sg-swipe>
            <button class="sg-arrow sg-arrow--left" type="button" aria-label="Anterior" data-sg-prev hidden>‹</button>
            <div class="sg-viewport" data-sg-viewport>
              <table class="sg-table" aria-label="Tabela de tamanhos: Camisola">
                <thead>
                  <tr>
                    <th class="sg-sticky">ZONA</th>
                    <th class="sg-size">M</th>
                    <th class="sg-size">L</th>
                    <th class="sg-size">XL</th>
                    <th class="sg-size">XXL</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <th scope="row" class="sg-sticky">Peito</th>
                    <td data-cm="61">61</td><td data-cm="64">64</td><td data-cm="67">67</td><td data-cm="70">70</td>
                  </tr>
                  <tr>
                    <th scope="row" class="sg-sticky">Comprimento à frente</th>
                    <td data-cm="68.5">68.5</td><td data-cm="70">70</td><td data-cm="71.5">71.5</td><td data-cm="73">73</td>
                  </tr>
                  <tr>
                    <th scope="row" class="sg-sticky">Comprimento da manga</th>
                    <td data-cm="62.5">62.5</td><td data-cm="64.5">64.5</td><td data-cm="65.5">65.5</td><td data-cm="66.5">66.5</td>
                  </tr>
                  <tr>
                    <th scope="row" class="sg-sticky">Largura das costas</th>
                    <td data-cm="50.5">50.5</td><td data-cm="55.5">55.5</td><td data-cm="58">58</td><td data-cm="60.5">60.5</td>
                  </tr>
                  <tr>
                    <th scope="row" class="sg-sticky">Largura do braço</th>
                    <td data-cm="25">25</td><td data-cm="27">27</td><td data-cm="28">28</td><td data-cm="29">29</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <button class="sg-arrow sg-arrow--right" type="button" aria-label="Seguinte" data-sg-next hidden>›</button>
            <div class="sg-fade sg-fade--left" aria-hidden="true"></div>
            <div class="sg-fade sg-fade--right" aria-hidden="true"></div>
          </div>

          {%- when 'tshirt' -%}
          <div class="sg-scroll" data-sg-swipe>
            <button class="sg-arrow sg-arrow--left" type="button" aria-label="Anterior" data-sg-prev hidden>‹</button>
            <div class="sg-viewport" data-sg-viewport>
              <table class="sg-table" aria-label="Tabela de tamanhos: T-shirt">
                <thead>
                  <tr>
                    <th class="sg-sticky">ZONA</th>
                    <th class="sg-size">S</th>
                    <th class="sg-size">M</th>
                    <th class="sg-size">L</th>
                    <th class="sg-size">XL</th>
                    <th class="sg-size">XXL</th>
                  </tr>
                </thead>
                <tbody>
                  <tr><th scope="row" class="sg-sticky">Peito</th>
                    <td data-cm="50">50</td><td data-cm="53">53</td><td data-cm="56">56</td><td data-cm="59">59</td><td data-cm="62">62</td>
                  </tr>
                  <tr><th scope="row" class="sg-sticky">Comprimento</th>
                    <td data-cm="70">70</td><td data-cm="72">72</td><td data-cm="74">74</td><td data-cm="76">76</td><td data-cm="78">78</td>
                  </tr>
                  <tr><th scope="row" class="sg-sticky">Manga</th>
                    <td data-cm="20">20</td><td data-cm="21">21</td><td data-cm="22">22</td><td data-cm="23">23</td><td data-cm="24">24</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <button class="sg-arrow sg-arrow--right" type="button" aria-label="Seguinte" data-sg-next hidden>›</button>
            <div class="sg-fade sg-fade--left" aria-hidden="true"></div>
            <div class="sg-fade sg-fade--right" aria-hidden="true"></div>
          </div>

          {%- when 'calcas' -%}
          <div class="sg-scroll" data-sg-swipe>
            <button class="sg-arrow sg-arrow--left" type="button" aria-label="Anterior" data-sg-prev hidden>‹</button>
            <div class="sg-viewport" data-sg-viewport>
              <table class="sg-table" aria-label="Tabela de tamanhos: Calças">
                <thead>
                  <tr>
                    <th class="sg-sticky">ZONA</th>
                    <th class="sg-size">28</th>
                    <th class="sg-size">30</th>
                    <th class="sg-size">32</th>
                    <th class="sg-size">34</th>
                    <th class="sg-size">36</th>
                  </tr>
                </thead>
                <tbody>
                  <tr><th scope="row" class="sg-sticky">Cintura</th>
                    <td data-cm="72">72</td><td data-cm="77">77</td><td data-cm="82">82</td><td data-cm="87">87</td><td data-cm="92">92</td>
                  </tr>
                  <tr><th scope="row" class="sg-sticky">Anca</th>
                    <td data-cm="92">92</td><td data-cm="97">97</td><td data-cm="102">102</td><td data-cm="107">107</td><td data-cm="112">112</td>
                  </tr>
                  <tr><th scope="row" class="sg-sticky">Entrepernas</th>
                    <td data-cm="76">76</td><td data-cm="78">78</td><td data-cm="80">80</td><td data-cm="82">82</td><td data-cm="84">84</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <button class="sg-arrow sg-arrow--right" type="button" aria-label="Seguinte" data-sg-next hidden>›</button>
            <div class="sg-fade sg-fade--left" aria-hidden="true"></div>
            <div class="sg-fade sg-fade--right" aria-hidden="true"></div>
          </div>

          {%- else -%}
          <div class="sg-empty">
            <p><strong>Sem tabela específica</strong></p>
            <p>Adiciona uma tag como <code>sizechart:camisola</code>, <code>sizechart:tshirt</code> ou <code>sizechart:calcas</code>.</p>
          </div>
        {%- endcase -%}
      </div>

      <p class="sg-howto">
        Consulta <a href="/pages/como-medir" target="_blank" rel="noopener">como medir a peça de roupa</a>.
      </p>
    </aside>
  </div>

  <style>
    .sg-link{background:transparent;border:0;padding:0;color:inherit;text-decoration:underline;cursor:pointer}

    .sg-root{position:fixed;inset:0;z-index:9999;display:grid}
    .sg-root[hidden]{display:none}
    .sg-overlay{background:rgba(0,0,0,.45)}
    .sg-panel{
      position:fixed;top:0;right:0;height:100%;width:min(720px,100%);
      background:#fff;box-shadow:-12px 0 30px rgba(0,0,0,.2);
      display:flex;flex-direction:column;gap:16px;padding:20px;overflow:auto
    }
    .sg-header{display:flex;align-items:center;justify-content:space-between}
    .sg-title{margin:0;font-size:18px}
    .sg-close{background:#f2f2f2;border:1px solid #e5e5e5;border-radius:10px;padding:6px 10px;cursor:pointer}
    .sg-media{display:flex;justify-content:center}
    .sg-img{max-width:420px;width:100%;height:auto;border-radius:8px;background:#f3f4f6}
    .sg-img--placeholder{width:320px;height:420px;border-radius:8px;background:linear-gradient(90deg,#f3f4f6,#eee,#f3f4f6)}
    .sg-note{font-size:13px;color:#666;margin:0}
    .sg-howto{font-size:14px;color:#555}

    /* ---------- Tabela + Swipe ---------- */
    .sg-table{width:max-content;border-collapse:collapse}
    .sg-table th,.sg-table td{border-top:1px solid #e5e7eb;padding:10px 8px;text-align:center;font-size:14px;white-space:nowrap}
    .sg-table thead th{font-weight:600;color:#111;background:#fafafa}
    .sg-table th[scope="row"]{text-align:left;font-weight:500;color:#111}

    /* Larguras base */
    :root{ --sg-label-col: 210px; --sg-size-col: 96px; }
    .sg-size{min-width:var(--sg-size-col)}
    .sg-sticky{
      position:sticky; left:0; z-index:2; background:#fff; /* fixa a coluna ZONA/labels */
      min-width:var(--sg-label-col); max-width:var(--sg-label-col)
    }
    thead .sg-sticky{background:#fafafa; z-index:3}

    .sg-scroll{position:relative}
    .sg-viewport{
      overflow-x:auto; -webkit-overflow-scrolling:touch;
      scroll-snap-type:x proximity; /* snap suave por coluna */
      border-bottom:1px solid #e5e7eb
    }
    /* sombreado nas extremidades para indicar scroll */
    .sg-fade{position:absolute; top:42px; bottom:0; width:20px; pointer-events:none}
    .sg-fade--left{left:var(--sg-label-col); background:linear-gradient(90deg,#fff,rgba(255,255,255,0))}
    .sg-fade--right{right:0; background:linear-gradient(270deg,#fff,rgba(255,255,255,0))}

    /* Setas */
    .sg-arrow{
      position:absolute; top:10px; transform:translateY(-50%);
      width:28px; height:28px; border-radius:999px; border:1px solid #e5e5e5; background:#fff; cursor:pointer;
      display:grid; place-items:center; z-index:4
    }
    .sg-arrow--left{ right:64px; }  /* junto ao título/unidades */
    .sg-arrow--right{ right:28px; }

    @media (max-width:740px){
      .sg-panel{padding:16px}
      .sg-img{max-width:100%}
      :root{ --sg-label-col: 180px; --sg-size-col: 88px; }
    }
  </style>

  <script>
  (function(){
    const id = "{{ sg_id }}";
    const root = document.getElementById(id);
    const openLink = document.querySelector('[data-sg-open="'+id+'"]');
    if(!root || !openLink) return;

    const panel = root.querySelector('.sg-panel');
    const overlay = root.querySelector('.sg-overlay');
    const closeBtns = root.querySelectorAll('[data-sg-close]');
    const unitBtns = root.querySelectorAll('.sg-unit');
    const tableWrap = root.querySelector('[data-sg-table]');

    function trapFocus(e){
      if(e.key !== 'Tab') return;
      const focusable = root.querySelectorAll('button,[href],input,select,textarea,[tabindex]:not([tabindex="-1"])');
      const first = focusable[0], last = focusable[focusable.length - 1];
      if(e.shiftKey && document.activeElement === first){ last.focus(); e.preventDefault(); }
      else if(!e.shiftKey && document.activeElement === last){ first.focus(); e.preventDefault(); }
    }

    function openDrawer(){
      root.hidden = false;
      document.documentElement.style.overflow = 'hidden';
      openLink.setAttribute('aria-expanded','true');
      panel.focus();
      document.addEventListener('keydown', onKeydown);
      document.addEventListener('keydown', trapFocus);
      // ao abrir, garantir que começa no início do scroll
      root.querySelectorAll('[data-sg-viewport]').forEach(v => v.scrollTo({left:0, behavior:'instant'}));
    }
    function closeDrawer(){
      root.hidden = true;
      document.documentElement.style.overflow = '';
      openLink.setAttribute('aria-expanded','false');
      openLink.focus();
      document.removeEventListener('keydown', onKeydown);
      document.removeEventListener('keydown', trapFocus);
    }
    function onKeydown(e){ if(e.key === 'Escape') closeDrawer(); }

    openLink.addEventListener('click', function(e){ e.preventDefault(); openDrawer(); });
    overlay.addEventListener('click', closeDrawer);
    closeBtns.forEach(b=> b.addEventListener('click', closeDrawer));

    // Conversão CM <-> IN
    function toIn(cm){ return (parseFloat(cm)/2.54).toFixed(1); }
    function renderUnit(unit){
      const cells = tableWrap ? tableWrap.querySelectorAll('td[data-cm]') : [];
      cells.forEach(td=>{
        const cm = td.getAttribute('data-cm');
        td.textContent = unit === 'cm' ? cm : toIn(cm);
      });
      unitBtns.forEach(btn=>{
        const active = btn.getAttribute('data-sg-unit') === unit;
        btn.classList.toggle('is-active', active);
        btn.setAttribute('aria-selected', active ? 'true' : 'false');
      });
    }
    unitBtns.forEach(btn=> btn.addEventListener('click', ()=> renderUnit(btn.getAttribute('data-sg-unit')) ));
    renderUnit('cm');

    // Navegação por swipe/teclas nas colunas de tamanho
    root.querySelectorAll('[data-sg-swipe]').forEach(section=>{
      const viewport = section.querySelector('[data-sg-viewport]');
      const prev = section.querySelector('[data-sg-prev]');
      const next = section.querySelector('[data-sg-next]');
      if(!viewport) return;

      // Mostrar setas apenas se houver overflow
      function toggleArrows(){
        const overflow = viewport.scrollWidth > viewport.clientWidth + 2;
        prev.hidden = next.hidden = !overflow;
      }
      const ro = new ResizeObserver(toggleArrows);
      ro.observe(viewport); toggleArrows();

      // Quantos tamanhos cabem de cada vez? (exclui a coluna sticky)
      function pageSize(){
        const sizeCol = viewport.querySelector('th.sg-size, td.sg-size');
        const colW = sizeCol ? sizeCol.getBoundingClientRect().width : 96;
        const visible = Math.max(1, Math.floor((viewport.clientWidth - parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--sg-label-col'))) / colW));
        return { colW, visible };
      }

      function scrollByPage(dir){
        const { colW, visible } = pageSize();
        viewport.scrollBy({ left: dir * colW * visible, behavior: 'smooth' });
      }
      prev?.addEventListener('click', ()=> scrollByPage(-1));
      next?.addEventListener('click', ()=> scrollByPage(1));

      // Acessibilidade por setas do teclado quando focado
      viewport.addEventListener('keydown', (e)=>{
        if(e.key === 'ArrowRight'){ e.preventDefault(); scrollByPage(1); }
        if(e.key === 'ArrowLeft'){ e.preventDefault(); scrollByPage(-1); }
      });
    });
  })();
  </script>
{%- endif -%}
