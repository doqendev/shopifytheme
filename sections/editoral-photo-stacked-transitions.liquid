{% comment %}
  Editorial Photo Stacked with transitions.
  Each slide fills the viewport and moves on scroll.
{% endcomment %}
<section class="editorial-slider-stack-transitions" id="editorial-slider-stack-transitions">
  {% for block in section.blocks %}
    {% case block.type %}
    {% when 'photo' %}
      <div
        class="editorial-slide-block color-{{ block.settings.color_scheme }}{% if forloop.first %} is-active-slide{% endif %}{% if block.settings.video_desktop != blank %} has-desktop-video{% endif %}{% if block.settings.video_mobile != blank %} has-mobile-video{% endif %}"
        data-slide-index="{{ forloop.index0 }}"
        data-color-scheme="{{ block.settings.color_scheme }}"
        data-header-scheme="{{ block.settings.header_color_scheme }}"
        data-icon-color="{{ block.settings.header_icon_color }}"
        data-logo-invert="{{ block.settings.invert_logo }}"
        style="
          --border-color: {{ block.settings.border_color }};
          --border-width: {{ block.settings.border_width }}px;
          --caption-color: {{ block.settings.caption_color | default: '#FFFFFF' }};
          --image-rotation: {{ block.settings.image_rotation | default: 0 }}deg;
          --f1-left: {{ block.settings.focus1_x | default: 50 }}%;
          --f1-top: {{ block.settings.focus1_y | default: 50 }}%;
          --f1-left-mobile: {{ block.settings.focus1_x_mobile | default: 50 }}%;
          --f1-top-mobile: {{ block.settings.focus1_y_mobile | default: 50 }}%;
          --f2-left: {{ block.settings.focus2_x | default: 50 }}%;
          --f2-top: {{ block.settings.focus2_y | default: 50 }}%;
          --f2-left-mobile: {{ block.settings.focus2_x_mobile | default: 50 }}%;
          --f2-top-mobile: {{ block.settings.focus2_y_mobile | default: 50 }}%;
        "
      >
      {%- assign desktop_image = block.settings.image_desktop -%}
      {%- assign mobile_image = block.settings.image_mobile -%}
      {%- assign desktop_video = block.settings.video_desktop -%}
      {%- assign mobile_video = block.settings.video_mobile -%}
      {%- assign alt_text = block.settings.caption | escape | default: 'Editorial image' -%}

      {%- comment -%} Determine a primary image for the fallback <img> tag {% endcomment -%}
      {%- assign has_any_image = false -%}
      {%- assign fallback_img_src = "" -%}
      {%- assign fallback_img_width = block.settings.max_width -%}

      {%- if desktop_image != blank -%}
        {%- assign has_any_image = true -%}
        {%- assign fallback_img_src = desktop_image | image_url: width: block.settings.max_width -%}
      {%- elsif mobile_image != blank -%}
        {%- assign has_any_image = true -%}
        {%- assign fallback_img_src = mobile_image | image_url: width: block.settings.max_width_mobile -%}
        {%- assign fallback_img_width = block.settings.max_width_mobile -%}
      {%- endif -%}

      {% if desktop_video != blank %}
        {{ desktop_video | video_tag: autoplay: true, loop: true, controls: false, muted: true, class: 'editorial-slide-video editorial-slide-video-desktop' }}
      {% endif %}
      {% if mobile_video != blank %}
        {{ mobile_video | video_tag: autoplay: true, loop: true, controls: false, muted: true, class: 'editorial-slide-video editorial-slide-video-mobile' }}
      {% endif %}

      {% if has_any_image %}
        <picture class="editorial-slide-picture-element">
          {% if mobile_image != blank %}
            <source
              media="(max-width: 700px)"
              srcset="{{ mobile_image | image_url: width: block.settings.max_width_mobile }}"
            >
          {% endif %}
          {% if desktop_image != blank %}
            <source
              media="(min-width: 701px)"
              srcset="{{ desktop_image | image_url: width: block.settings.max_width }}"
            >
          {% endif %}
          {%- comment -%} Fallback for browsers that don't support <picture> or if sources fail. Uses determined fallback_img_src. {%- endcomment -%}
          <img
            src="{{ fallback_img_src }}"
            alt="{{ alt_text }}"
            class="editorial-slide-image"
            loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
            width="{{ fallback_img_width }}"
          >
        </picture>
      {% else %}
        <div class="editorial-slide-placeholder">
          {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
        </div>
      {% endif %}
      
      {%- assign has_caption_content = false -%}
      {%- if block.settings.caption != blank -%}
        {%- assign has_caption_content = true -%}
      {%- endif -%}

      {%- assign has_button_content = false -%}
      {%- if block.settings.button_text != blank and block.settings.button_link != blank -%}
        {%- assign has_button_content = true -%}
      {%- endif -%}

      {% if has_caption_content or has_button_content %}
        <div class="editorial-slide-overlay">
          {% if has_caption_content %}
            <div class="editorial-slide-caption">{{ block.settings.caption }}</div>
          {% endif %}
          {% if has_button_content %}
            <a href="{{ block.settings.button_link }}" class="editorial-slide-button">
              {{ block.settings.button_text }}
            </a>
          {% endif %}
        </div>
      {% endif %}

      {% if block.settings.focus1_product != blank %}
        {% assign fp1 = all_products[block.settings.focus1_product] %}
        <div class="focus-point" style="--x: var(--f1-left); --y: var(--f1-top); --x-mobile: var(--f1-left-mobile); --y-mobile: var(--f1-top-mobile);">
          <button type="button" class="focus-point__button" aria-label="{{ fp1.title | escape }}"></button>
          <div class="focus-popout">
            {% render 'card-product', card_product: fp1, section_id: section.id %}
          </div>
        </div>
      {% endif %}

      {% if block.settings.focus2_product != blank %}
        {% assign fp2 = all_products[block.settings.focus2_product] %}
        <div class="focus-point" style="--x: var(--f2-left); --y: var(--f2-top); --x-mobile: var(--f2-left-mobile); --y-mobile: var(--f2-top-mobile);">
          <button type="button" class="focus-point__button" aria-label="{{ fp2.title | escape }}"></button>
          <div class="focus-popout">
            {% render 'card-product', card_product: fp2, section_id: section.id %}
          </div>
        </div>
      {% endif %}
      </div>
    {% when 'footer' %}
      <div class="editorial-slide-block footer-slide color-{{ block.settings.color_scheme }}{% if forloop.first %} is-active-slide{% endif %}" data-slide-index="{{ forloop.index0 }}" data-color-scheme="{{ block.settings.color_scheme }}" data-header-scheme="{{ block.settings.header_color_scheme }}" data-icon-color="{{ block.settings.header_icon_color }}" data-logo-invert="{{ block.settings.invert_logo }}" style="--border-width:0px;">
        <div class="footer-desktop">
          {% render 'footer-drawer-desktop', section: block %}
        </div>
        <div class="footer-mobile">
          {% render 'footer-drawer', section: block %}
        </div>
      </div>
    {% endcase %}
  {% endfor %}
</section>

<style>
  .editorial-slider-stack-transitions {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    background: transparent;
  }

  .editorial-slide-block {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    padding: var(--border-width, 0px);
    background: var(--border-color, #eaeada);
    box-sizing: border-box;
    opacity: 0;
    transform: translateY(100vh);
    transition: transform 0.55s cubic-bezier(.65,0,.35,1), opacity 0.65s cubic-bezier(.55,0,.35,1);
    pointer-events: none;
  }

  .editorial-slide-block.is-active-slide {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
  }

  /* Hide images when a corresponding video exists */
  @media (min-width: 701px) {
    .editorial-slide-block.has-desktop-video .editorial-slide-picture-element {
      display: none;
    }
  }

  @media (max-width: 700px) {
    .editorial-slide-block.has-mobile-video .editorial-slide-picture-element {
      display: none;
    }
  }


  .editorial-slide-picture-element { /* Style for the <picture> tag */
    display: block;
    width: 100%;
    height: 100%; /* Ensure it fills the inner area of the slide */
    overflow: hidden; /* In case object-fit doesn't perfectly contain */
  }

  .editorial-slide-image {  /* Style for the <img> tag inside <picture> */
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transform: rotate(var(--image-rotation, 0deg));
  }

  .editorial-slide-video {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .editorial-slide-video-desktop {
    display: block;
  }

  .editorial-slide-video-mobile {
    display: none;
  }

  /* Footer visibility */
  @media (max-width: 750px) {
    .footer-desktop { display: none; }
  }
  @media (min-width: 751px) {
    .footer-mobile { display: none; }
  }

  .editorial-slide-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%; 
    height: 100%; 
    background-color: #f0f0f0;
  }
  .editorial-slide-placeholder .placeholder-svg {
    width: 50px;
    height: 50px;
  }

  .editorial-slide-overlay {
    position: absolute;
    top: var(--border-width, 24px);
    bottom: var(--border-width, 24px);
    left: var(--border-width, 24px);
    right: var(--border-width, 24px);
    z-index: 2; 
    
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end; 
    padding-bottom: 12%; 
    pointer-events: none; 
  }

  .editorial-slide-caption {
    width: auto; 
    max-width: 90%;
    margin-bottom: 20px; 
    
    color: var(--caption-color, #FFFFFF);
    font-size: 3.5rem; 
    font-weight: 700; 
    text-transform: uppercase; 
    text-align: center;
    letter-spacing: 0.05em; 
    
    text-shadow: 0px 2px 6px rgba(0, 0, 0, 0.35); 
    
    background-color: transparent; 
    pointer-events: none; 
  }

  .editorial-slide-button {
    display: inline-block; 
    padding: 10px 28px; 
    font-size: 0.85rem; 
    color: #FFFFFF;
    background-color: rgba(0, 0, 0, 0.4); 
    border: 1px solid rgba(255,255,255,0.75); 
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 0.08em;
    border-radius: 0;
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
    cursor: pointer;
    pointer-events: auto; 
  }

  .editorial-slide-button:hover,
  .editorial-slide-button:focus {
    background-color: #FFFFFF;
    color: #000000;
    border-color: #FFFFFF;
  }

  .focus-point {
    position: absolute;
    left: var(--x);
    top: var(--y);
    transform: translate(-50%, -50%);
    z-index: 3;
  }

  .focus-point__button {
    width: 14px;
    height: 14px;
    padding: 0;
    border-radius: 50%;
    background: #ffffff;
    border: none;
    cursor: pointer;
    box-shadow: 0 0 4px 0 rgba(255, 255, 255, 0.7);
    animation: focus-glow 2s ease-in-out infinite;
  }

  @keyframes focus-glow {
    0%, 100% { box-shadow: 0 0 4px 0 rgba(255, 255, 255, 0.7); }
    50% { box-shadow: 0 0 12px 4px rgba(255, 255, 255, 0.9); }
  }

  .focus-popout {
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.25s ease;
    position: absolute;
    top: calc(100% + 8px);
    left: 50%;
    transform: translateX(-50%);
    z-index: 4;
    background: #ffffff;
    padding: 8px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);
    width: 200px;
  }

  .focus-point.is-open .focus-popout {
    opacity: 1;
    visibility: visible;
  }

  /* Ensure footer slide sits flush with the bottom */
  .footer-slide .footer {
    margin-bottom: 0 !important;
    padding-bottom: 0 !important;
  }

  @media (max-width: 700px) {
    .editorial-slide-block {
      height: 100vh;
      width: 100%;
      padding: var(--mobile-border-width, 0px);
    }
    .editorial-slide-video-desktop {
      display: none;
    }
    .editorial-slide-video-mobile {
      display: block;
    }
    .editorial-slide-overlay {
        top: var(--mobile-border-width, 8px);
        bottom: var(--mobile-border-width, 8px);
        left: var(--mobile-border-width, 8px);
        right: var(--mobile-border-width, 8px);
        padding-bottom: 10%;
    }
    .editorial-slide-caption {
      font-size: 2rem;
      margin-bottom: 15px;
      letter-spacing: 0.03em;
      text-shadow: 0px 1px 4px rgba(0, 0, 0, 0.4);
    }
    .editorial-slide-button {
      font-size: 0.8rem;
      padding: 8px 20px;
      background-color: rgba(0, 0, 0, 0.45);
      border: 1px solid rgba(255,255,255,0.7);
    }
    .focus-point {
      left: var(--x-mobile);
      top: var(--y-mobile);
    }
    .focus-point__button {
      width: 10px;
      height: 10px;
    }
    .focus-popout {
      width: 180px;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var container = document.getElementById('editorial-slider-stack-transitions');
    if (!container) return;

    var slides = Array.from(container.querySelectorAll('.editorial-slide-block'));
    var headerWrapper = document.querySelector('.header-wrapper');
    if (slides.length === 0) return;

    var currentIndex = 0;

    slides.forEach(function(slide, index) {
      if (index === 0) {
        slide.style.display = 'block';
      } else {
        slide.style.display = 'none';
      }
    });

    function changeSlide(next, reverse) {
      if (next < 0 || next >= slides.length || next === currentIndex) return;

      var oldSlide = slides[currentIndex];
      var newSlide = slides[next];

      if (oldSlide) {
        oldSlide.style.zIndex = '0';
        oldSlide.style.pointerEvents = 'none';
        // Keep old slide visible during the transition so it remains the background
      }

      newSlide.style.display = 'block';
      newSlide.style.transition = 'none';
      newSlide.style.transform = reverse ? 'translateY(-100vh)' : 'translateY(100vh)';
      newSlide.style.zIndex = '1';
      newSlide.classList.add('is-active-slide');
      void newSlide.offsetWidth;

      if (headerWrapper) {
        if (newSlide.dataset.headerScheme) {
          headerWrapper.className = headerWrapper.className.replace(/color-[^ ]+/g, 'color-' + newSlide.dataset.headerScheme);
        }
        if (newSlide.dataset.iconColor) {
          headerWrapper.style.setProperty('--icon-color', newSlide.dataset.iconColor);
        } else {
          headerWrapper.style.removeProperty('--icon-color');
        }
        if (newSlide.dataset.logoInvert === 'true') {
          headerWrapper.style.setProperty('--logo-filter', 'brightness(0) invert(1)');
        } else {
          headerWrapper.style.setProperty('--logo-filter', 'none');
        }
      }

      newSlide.style.transition = 'transform 0.55s cubic-bezier(.65,0,.35,1)';
      newSlide.style.transform = 'translateY(0)';

      (function(oldEl){
        setTimeout(function(){
          if (!oldEl) return;
          oldEl.style.display = 'none';
          oldEl.classList.remove('is-active-slide');
        }, 600);
      })(oldSlide);

      currentIndex = next;

      if (currentIndex === slides.length - 1) {
        document.body.style.overflow = '';
      } else {
        document.body.style.overflow = 'hidden';
      }
    }

    function nextSlide() {
      changeSlide(currentIndex + 1, false);
    }

    function previousSlide() {
      changeSlide(currentIndex - 1, true);
    }

    document.body.style.overflow = 'hidden';

    var lastScroll = 0;
    var cooldown = 700;

    window.addEventListener('wheel', function(e) {
      var now = Date.now();
      if (now - lastScroll < cooldown) return;
      if (e.deltaY > 0) {
        nextSlide();
      } else if (e.deltaY < 0) {
        previousSlide();
      }
      lastScroll = now;
    }, { passive: true });

    var touchStartY = 0;
    window.addEventListener('touchstart', function(e) {
      touchStartY = e.touches[0].clientY;
    }, { passive: true });
    window.addEventListener('touchend', function(e) {
      var delta = touchStartY - e.changedTouches[0].clientY;
      if (Math.abs(delta) > 30) {
        if (delta > 0) nextSlide(); else previousSlide();
      }
    }, { passive: true });
  });
</script>

{% schema %}
{
  "name": "Stacked Transitions",
  "tag": "section",
  "max_blocks": 10,
  "settings": [
    {
      "type": "header",
      "content": "Stacked Transitions",
      "info": "Full-screen stacked slider with scroll transitions."
    }
  ],
  "blocks": [
    {
      "type": "photo",
      "name": "Photo Block",
      "settings": [
        {
          "type": "image_picker",
          "id": "image_desktop",
          "label": "Desktop Image"
        },
        {
          "type": "image_picker",
          "id": "image_mobile",
          "label": "Mobile Image (Portrait Recommended)"
        },
        {
          "type": "video",
          "id": "video_desktop",
          "label": "Desktop Video"
        },
        {
          "type": "video",
          "id": "video_mobile",
          "label": "Mobile Video (Portrait Recommended)"
        },
        {
          "type": "text",
          "id": "caption",
          "label": "Caption Text",
          "default": "Image Caption"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button Text",
          "default": "Shop Now",
          "info": "Leave blank to hide button."
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
        {
          "type": "color",
          "id": "border_color",
          "label": "Border Color",
          "default": "#eaeada"
        },
        {
          "type": "color",
          "id": "caption_color",
          "label": "Caption Color",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "header_icon_color",
          "label": "Header Icon Color",
          "default": "#ffffff"
        },
        {
          "type": "checkbox",
          "id": "invert_logo",
          "label": "Invert Logo",
          "default": false
        },
        {
          "type": "color_scheme",
          "id": "header_color_scheme",
          "label": "Header Color Scheme",
          "default": "scheme-1"
        },
        {
          "type": "range",
          "id": "border_width",
          "label": "Border Width (Desktop)",
          "min": 0,
          "max": 50,
          "step": 1,
          "unit": "px",
          "default": 24
        },
        {
          "type": "range",
          "id": "max_width",
          "label": "Max Slide Width (Desktop)",
          "min": 300,
          "max": 1200,
          "step": 10,
          "unit": "px",
          "default": 840
        },
        {
          "type": "range",
          "id": "margin_left",
          "label": "Left Margin (Desktop)",
          "min": -300,
          "max": 300,
          "step": 10,
          "unit": "px",
          "default": 0
        },
        {
          "type": "range",
          "id": "margin_right",
          "label": "Right Margin (Desktop)",
          "min": -300,
          "max": 300,
          "step": 10,
          "unit": "px",
          "default": 0
        },
        {
          "type": "checkbox",
          "id": "full_width",
          "label": "Full Width"
        },
        {
          "type": "range",
          "id": "image_rotation",
          "label": "Image Rotation",
          "min": -45,
          "max": 45,
          "step": 1,
          "unit": "deg",
          "default": 0
        },
        {
          "type": "range",
          "id": "margin_top",
          "label": "Top Margin (Desktop)",
          "min": 0,
          "max": 300,
          "step": 5,
          "unit": "px",
          "default": 200
        },
        {
          "type": "header",
          "content": "Focal Point 1"
        },
        {
          "type": "product",
          "id": "focus1_product",
          "label": "Product"
        },
        {
          "type": "range",
          "id": "focus1_x",
          "label": "Horizontal Position (Desktop)",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 50
        },
        {
          "type": "range",
          "id": "focus1_y",
          "label": "Vertical Position (Desktop)",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 50
        },
        {
          "type": "range",
          "id": "focus1_x_mobile",
          "label": "Horizontal Position (Mobile)",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 50
        },
        {
          "type": "range",
          "id": "focus1_y_mobile",
          "label": "Vertical Position (Mobile)",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 50
        },
        {
          "type": "header",
          "content": "Focal Point 2"
        },
        {
          "type": "product",
          "id": "focus2_product",
          "label": "Product"
        },
        {
          "type": "range",
          "id": "focus2_x",
          "label": "Horizontal Position 2 (Desktop)",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 50
        },
        {
          "type": "range",
          "id": "focus2_y",
          "label": "Vertical Position 2 (Desktop)",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 50
        },
        {
          "type": "range",
          "id": "focus2_x_mobile",
          "label": "Horizontal Position 2 (Mobile)",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 50
        },
        {
          "type": "range",
          "id": "focus2_y_mobile",
          "label": "Vertical Position 2 (Mobile)",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "default": 50
        },
        {
          "type": "header",
          "content": "Mobile Settings"
        },
        {
          "type": "range",
          "id": "border_width_mobile",
          "label": "Border Width (Mobile)",
          "min": 0,
          "max": 30,
          "step": 1,
          "unit": "px",
          "default": 8
        },
        {
          "type": "range",
          "id": "max_width_mobile",
          "label": "Max Slide Width (Mobile)",
          "min": 200,
          "max": 600,
          "step": 5,
          "unit": "px",
          "default": 360
        },
        {
          "type": "range",
          "id": "margin_top_mobile",
          "label": "Top Margin (Mobile)",
          "min": 0,
          "max": 200,
          "step": 5,
          "unit": "px",
          "default": 40
        },
        {
          "type": "range",
          "id": "margin_left_mobile",
          "label": "Left Margin (Mobile)",
          "min": -200,
          "max": 200,
          "step": 5,
          "unit": "px",
          "default": 0
        },
        {
          "type": "range",
          "id": "margin_right_mobile",
          "label": "Right Margin (Mobile)",
          "min": -200,
          "max": 200,
          "step": 5,
          "unit": "px",
          "default": 0
        },
        {
          "type": "checkbox",
          "id": "full_width_mobile",
          "label": "Full Width (Mobile)"
        }
      ]
    },
    {
      "type": "footer",
      "name": "Footer",
      "settings": [
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "label": "Color Scheme",
          "default": "scheme-1"
        },
        {
          "type": "color",
          "id": "header_icon_color",
          "label": "Header Icon Color",
          "default": "#ffffff"
        },
        {
          "type": "checkbox",
          "id": "invert_logo",
          "label": "Invert Logo",
          "default": false
        },
        {
          "type": "color_scheme",
          "id": "header_color_scheme",
          "label": "Header Color Scheme",
          "default": "scheme-1"
        },
        {
          "type": "range",
          "id": "margin_top",
          "label": "Margin Top",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "default": 0
        },
        {
          "type": "range",
          "id": "padding_top",
          "label": "Padding Top",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "default": 36
        },
        {
          "type": "range",
          "id": "padding_bottom",
          "label": "Padding Bottom",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "default": 0
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Stacked Transitions",
      "category": "Image",
      "blocks": [
        { 
          "type": "photo",
          "settings": {
            "caption": "NewCollection",
            "button_text": "Discover"
          }
        },
        { 
          "type": "photo",
          "settings": {
            "caption": "Seasonal Sale",
            "button_text": "Shop Now"
          }
        },
        { "type": "photo" }
      ]
    }
  ]
}
{% endschema %}
