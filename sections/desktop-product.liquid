{% schema %}
{
  "name": "Desktop Product",
  "settings": [],
  "presets": [
    {
      "name": "Desktop Product"
    }
  ]
}
{% endschema %}

{% comment %}
  Create a dummy block object with default settings
{% endcomment %}
{% assign dummy_block = '{ "settings": { "picker_type": "button", "swatch_shape": "circle" }, "shopify_attributes": "" }' | parse_json %}

{% comment %}
  Include variant/swatch CSS if needed
{% endcomment %}
{% unless product.has_only_default_variant %}
  {{ 'component-product-variant-picker.css' | asset_url | stylesheet_tag }}
  {{ 'component-swatch.css' | asset_url | stylesheet_tag }}
{% endunless %}
{{ 'component-swatch-input.css' | asset_url | stylesheet_tag }}
{{ 'component-product-variant-picker.css' | asset_url | stylesheet_tag }}
{{ 'component-swatch.css' | asset_url | stylesheet_tag }}

<style>
  /* Hide this entire desktop section on mobile, to avoid conflict */
  @media screen and (max-width: 749px) {
    .desktop-product-section {
      display: none !important;
    }
    .footer-desktop {
      display: none;
    }
    .desktop-related-products {
      display: none;
    }
  }

  /* The 2-column layout for desktop */
  .desktop-product-section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 40px 20px;
    display: grid;
    grid-template-columns: 3fr 2fr; /* left media, right info */
    gap: 20px;
  }

  /* Left column: Thumbnails + a scrollable container for big images */
  .desktop-product-media {
    display: flex; /* Two side-by-side blocks: thumbnails & big images container */
    gap: 10px;
  }

  /* Thumbnails: single column; all thumbnails are visible */
  .desktop-product-media .thumbnail-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column; /* one column */
    gap: 10px;
    width: 80px; /* thumbnail column width */
  }
  .desktop-product-media .thumbnail-list li {
    cursor: pointer;
    opacity: 0.6;
    transition: opacity 0.2s;
  }
  .desktop-product-media .thumbnail-list li:hover {
    opacity: 0.8;
  }
  .desktop-product-media .thumbnail-list li.active {
    opacity: 1;
    border: 1px solid #545454;
  }
  .desktop-product-media .thumbnail-list li img {
    width: 100%;
    height: auto;
    display: block;
    object-fit: contain;
  }

  /* Scrollable container for big images (independent scroll) */
  .desktop-product-media .image-scroll-container {
    position: relative;
    width: 100%;
    max-width: 600px;
    height: 100vh;             /* Fill the viewport height */
    overflow-y: auto;          /* Independent scroll */
    scrollbar-width: none;     /* Hide scrollbar in Firefox */
    -ms-overflow-style: none;  /* Hide scrollbar in IE/Edge */
  }
  .desktop-product-media .image-scroll-container::-webkit-scrollbar {
    display: none; /* Hide scrollbar in Chrome, Safari, Opera */
  }

  /* The stacked big images inside the scrollable container */
  .desktop-product-media .main-images-list {
    display: flex;
    flex-direction: column;
    gap: 20px;
    padding-bottom: 40px; /* extra space at bottom */
  }
  .desktop-product-media .main-image-slide img {
    width: 100%;
    height: auto;
    display: block;
    object-fit: contain;
  }

  /* Right column: Sticky Info */
  .desktop-product-info {
    position: sticky;
    top: 0;
    align-self: start;
    padding: 20px;
    background: #fff;
  }

  /* Title styling */
  .desktop-product-info h1 {
    font-size: 24px;
    margin-bottom: 8px;
  }

  /* Price styling */
  .desktop-product-info .price--large {
    font-size: 20px;
    margin-bottom: 10px;
    font-weight: bold;
  }

  /* Variant picker / Buy buttons spacing */
  .desktop-product-info .product-variants {
    margin-bottom: 15px;
  }
  .desktop-product-info .add-to-cart {
    margin-bottom: 20px;
  }

  /* Description styling */
  .desktop-product-info .product-description {
    line-height: 1.4;
    color: #333;
    margin-top: 10px;
  }

  /* Example sale price color/size changes */
  #shopify-section-template--24455438926148__desktop_product_kf6zNg > div > div.desktop-product-info > div.price-container > div > div > div.price__sale > span.price-item.price-item--sale.price-item--last {
    color: #ff6f61 ;
    font-weigth: bold;
    font-size: 20px;
  }
  #shopify-section-template--24455438926148__desktop_product_kf6zNg > div > div.desktop-product-info > div.price-container > div > div > div.price__sale {
    background: transparent;
  }
  #shopify-section-template--24455438926148__desktop_product_kf6zNg > div > div.desktop-product-info > div.price-container > div > div > div.price__sale > span:nth-child(2) > s {
    color: grey;
    font-size: 18px!important;
  }

  .price > * {
    display: inline-block;
  }

  /* Additional swatch / variant styling from previous code */
  @media screen and (min-width: 750px) {
    fieldset.product-form__input--swatch legend.form__label:contains("Size") ~ input + label .visually-hidden,
    fieldset.product-form__input--swatch legend.form__label:contains("Tamanho") ~ input + label .visually-hidden {
      position: static !important;
      width: auto !important;
      height: auto !important;
      clip: auto !important;
      clip-path: none !important;
      overflow: visible !important;
      display: inline-block !important;
      color: #000 !important;
    }
    #MediaGallery-template--24455438926148__main {
      display: none;
    }
  }

  /* Remove default bullets from the Size list */
  .text-swatch-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    gap: 10px;
  }
  .text-swatch-input {
    display: none;
  }
  .text-swatch-label {
    display: inline-block;
    padding: 8px 16px;
    border: 1px solid #999;
    cursor: pointer;
    border-radius: 4px;
    background: #f9f9f9;
  }
  .text-swatch-input:checked + .text-swatch-label {
    background: #333;
    color: #fff;
    border-color: #333;
  }

  #variant-selects-template--24455438926148__desktop_product_kf6zNg > fieldset.js.product-form__input.product-form__input--pill {
    display: flex;
  }
  #variant-selects-template--24455438926148__desktop_product_kf6zNg > fieldset.js.product-form__input.product-form__input--swatch > label > span.swatch {
    border-radius: 100%;
    width: 36px;
    height: 36px;
  }
  #variant-selects-template--24455438926148__desktop_product_kf6zNg > fieldset.js.product-form__input.product-form__input--pill > label {
    padding: 7px 9px;
    display: inline-block;
    border: 1px solid #000;
    cursor: pointer;
    margin-right: 8px;
    margin-top: 14px;
    min-height: 36px;
    min-width: 36px;
    line-height: 20px;
    font-size: 14px;
    text-align: center;
    box-sizing: border-box;
    border-radius: 20px;
  }
  #shopify-section-template--24455438926148__desktop_product_kf6zNg > div > div.desktop-product-info > h1 {
    margin-top: 0px;
  }
  #shopify-section-template--24455438926148__desktop_product_kf6zNg > div > div.desktop-product-info {
    padding: 0px 0px 10px 10px;
  }
  #variant-selects-template--24455438926148__desktop_product_kf6zNg {
    border: none;
  }

  /* Fieldset borders top/bottom for swatches */
  .product-form__input--swatch,
  .product-form__input--pill {
    border: none;
  }
  fieldset.product-form__input--swatch,
  fieldset.product-form__input--pill {
    border: none !important;
    border-bottom: 1px solid #ccc !important;
    padding: 20px 0px 40px 0;
  }
  /* Hide fieldset legends */
  #variant-selects-template--24455438926148__desktop_product_kf6zNg > fieldset.js.product-form__input.product-form__input--swatch > legend, 
  #variant-selects-template--24455438926148__desktop_product_kf6zNg > fieldset.js.product-form__input.product-form__input--pill > legend {
    display: none;
  }

  .footer-desktop {
    margin-top: 10rem;
  }

  .desktop-product-info .product__title-link {
    text-decoration: none;
    color: inherit;
    margin: 0 0 10px 0;
    font-weight: 500;
    font-size: 22px;
    line-height: 1.3;
    margin-bottom: 0;
  }

  desktop-related-products {
    display: none;
  }

  h2.also {
    margin: 50px 20px 10px 100px;
    font-weight: 600;
    font-size: 18px;
    line-height: 1.3;
  }

  #MainProduct-template--24455438926148__main > div > div.mobile-extras > div.mobile-related-products > h2 {
  margin: 0px 0px 0px 0px;
  }
  /* Changed to apply outline to the label itself when .active */
  .product-form__input--swatch label.active > span.swatch {
    border: 2px solid #fff;
    outline: 1px solid #000;
  }

  /* Accordion CSS */
  .product-info-accordion {
    max-width: 600px;
    margin: 0 auto;
  }
  .accordion-item {
    /*border-bottom: 1px solid #ddd;*/
  }
  .accordion-button {
    width: 100%;
    background: none;
    border: none;
    text-align: left;
    padding: 1rem;
    font-size: 13px;
    font-weight: bold;
    cursor: pointer;
    outline: none;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .accordion-button::after {
    content: "+";
    font-size: 13px;
    font-weight: 500;
    margin-left: auto;
    transition: transform 0.2s ease;
  }
  .accordion-button[aria-expanded="true"]::after {
    content: "-";
    transform: rotate(180deg);
  }
  .accordion-content {
    max-height: 0;
    overflow: hidden;
    padding: 0 1rem;
    transition: max-height 0.3s ease, padding 0.3s ease;
  }
  .accordion-content p {
    margin: 1rem 0;
    font-size: 12px;
    font-weight: 500;
  }
  .accordion-button[aria-expanded="true"] + .accordion-content {
    max-height: 200px;
    padding: 1rem;
  }

  @media screen and (min-width: 750px) {
    #ProductSubmitButton- {
      background: transparent!important;
      color: black!important;
      border: none!important;
      width: 100%;
    }
  }

.product-description-container {
  white-space: normal;        /* Allow normal wrapping */
  word-break: break-word;     /* Break long words if needed */
  overflow-wrap: break-word;  /* Additional fallback for older browsers */
  max-width: 100%;            /* Prevent container from exceeding its parent width */
}

#NewsletterForm--sections--24361744990532__footers_MJGUrj {
  margin-left: 10%;
}
.product-description-container.expanded {
  max-height: 9999px; /* Big enough to show all text */
}

.description-toggle {
  display: inline-block;
  margin-top: 5px;
  color: blue;
  text-decoration: underline;
  cursor: pointer;
}

#ContactFooter > div.newsletter-form__field-wrapper > div > label {
    margin-top: -29px;
    margin-left: -15px;
}

</style>

<div class="desktop-product-section">
  <!-- Left side: Thumbnails + Scrollable Big Images -->
  <div class="desktop-product-media">
    <!-- Thumbnails (vertical list) -->
    <ul class="thumbnail-list" id="ThumbnailList-{{ section.id }}">
      {% for media in product.media %}
        <li data-media-index="{{ forloop.index0 }}">
          {{ media | img_tag: '100x100', alt: media.alt }}
        </li>
      {% endfor %}
    </ul>

    <!-- Scrollable container for stacked big images -->
    <div class="image-scroll-container" id="ImageScrollContainer-{{ section.id }}">
      <div class="main-images-list" id="MainImages-{{ section.id }}">
        {% for media in product.media %}
          <div class="main-image-slide"
               id="Slide-{{ forloop.index0 }}"
               data-index="{{ forloop.index0 }}"
               data-media-id="{{ media.id }}">
            <img 
              src="{{ media | img_url: '1024x1024' }}" 
              alt="{{ media.alt | escape }}"
            >
          </div>
        {% endfor %}
      </div>
    </div>
  </div>

  <!-- Right side: Sticky Info -->
  <div class="desktop-product-info">
    <!-- Title -->
    <h1>
      <a class="product__title-link" href="{{ product.url }}">{{ product.title }}</a>
    </h1>

    <!-- Price -->
    <div class="price-container">
      {% render 'price', product: product, use_variant: true, show_badges: true, price_class: 'price--large' %}
    </div>

    <!-- Description container (will be filled by JS) -->
    <div class="product-description" id="DesktopDescContainer">{{ product.description }}</div>
        <div>
    {% render 'size-chart-desktop' %}
    </div>
    {% unless product.has_only_default_variant %}
      <!-- Variant Picker -->
      <div class="product-variants">
        {% render 'desktop-variant-picker',
          product: product,
          product_form_id: 'desktop-product-form-' | append: section.id,
          block: dummy_block
        %}
      </div>
    {% endunless %}

    <!-- Add to Cart Buttons -->
    <div class="add-to-cart">
      {% render 'buy-buttons',
          block: dummy_block,
          product: product,
          product_form_id: 'desktop-product-form-' | append: section.id,
          show_pickup_availability: false
      %}
    </div>

    <!-- Accordion -->
    <div class="product-info-accordion">
      <div class="accordion-item">
        <button class="accordion-button" aria-expanded="false">
          Composição e cuidados
        </button>
        <div class="accordion-content">
          <p>
            <!-- Coloque aqui a composição do produto e informações de cuidados. -->
            Exemplo: 100% Algodão. Lavar à máquina a 30°C.
          </p>
        </div>
      </div>

      <div class="accordion-item">
        <button class="accordion-button" aria-expanded="false">
          Envios, trocas e devoluções
        </button>
        <div class="accordion-content">
          <p>
            <!-- Detalhes sobre envios, prazos, trocas e devoluções. -->
            Exemplo: Entrega em 2-3 dias úteis. Trocas e devoluções até 30 dias.
          </p>
        </div>
      </div>

      <div class="accordion-item">
        <button class="accordion-button" aria-expanded="false">
          Disponibilidade na loja
        </button>
        <div class="accordion-content">
          <p>
            <!-- Informações sobre disponibilidade em lojas físicas, se aplicável. -->
            Exemplo: Disponível em todas as lojas da região.
          </p>
        </div>
      </div>

      <div class="accordion-item">
        <button class="accordion-button" aria-expanded="false">
          Partilhar
        </button>
        <div class="accordion-content">
          <p>
            <!-- Ícones de redes sociais ou links de compartilhamento. -->
            <a href="#">Facebook</a> | <a href="#">Instagram</a> | <a href="#">Twitter</a>
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="desktop-related-products">
  <h2 class="also" style="margin-bottom: 1em;">Talvez lhe possa interessar</h2>
  {% render 'random-collection-grid' %}
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {


  // =========================
  // Intersection Observer for stacked images in the scroll container
  // =========================
  var containerEl = document.getElementById('ImageScrollContainer-{{ section.id }}');
  var slidesContainer = document.getElementById('MainImages-{{ section.id }}');
  var thumbnailList = document.getElementById('ThumbnailList-{{ section.id }}');
  if (!containerEl || !slidesContainer || !thumbnailList) return;

  var slides = slidesContainer.querySelectorAll('.main-image-slide');
  var thumbs = thumbnailList.querySelectorAll('li');

  function clearActiveThumbnails() {
    thumbs.forEach(function(thumb) {
      thumb.classList.remove('active');
    });
  }

  // Intersection Observer with the "root" set to the scroll container
  var observerOptions = {
    root: containerEl,  // observe inside the containerEl
    rootMargin: '0px',
    threshold: 0.5 // highlight thumbnail when 50% of image is in view
  };

  var observer = new IntersectionObserver(function(entries) {
    entries.forEach(function(entry) {
      if (entry.isIntersecting) {
        var index = entry.target.getAttribute('data-index');
        clearActiveThumbnails();
        var matchingThumb = thumbnailList.querySelector('li[data-media-index="' + index + '"]');
        if (matchingThumb) {
          matchingThumb.classList.add('active');
        }
      }
    });
  }, observerOptions);

  slides.forEach(function(slide) {
    observer.observe(slide);
  });

  // Clicking a thumbnail → smooth-scroll to that image
  thumbnailList.addEventListener('click', function(e) {
    var clickedLi = e.target.closest('li');
    if (!clickedLi) return;
    var index = clickedLi.getAttribute('data-media-index');
    var targetSlide = slidesContainer.querySelector('.main-image-slide[data-index="' + index + '"]');
    if (targetSlide) {
      var offsetTop = targetSlide.offsetTop;
      containerEl.scrollTo({
        top: offsetTop,
        behavior: 'smooth'
      });
    }
  });

  // When scrolling over the thumbnails, scroll the image container with native speed
  thumbnailList.addEventListener('wheel', function(e) {
    e.preventDefault(); // Prevent default scrolling on the thumbnail list
    containerEl.scrollBy({
      top: e.deltaY,
      behavior: 'auto'
    });
  });
});
</script>

<!-- Variant ID Sync Script for Desktop -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  var productData = {{ product | json }};
  if (!productData.variants) {
    console.warn("productData has no variants");
    return;
  }
  
  var addToCartContainer = document.querySelector('.desktop-product-info .add-to-cart');
  if (!addToCartContainer) {
    console.warn("No add-to-cart container found in desktop product info");
    return;
  }
  
  var buyButtonsForm = addToCartContainer.querySelector('form');
  if (!buyButtonsForm) {
    console.warn("No buy-buttons form found inside the add-to-cart container");
    return;
  }
  
  var hiddenInput = buyButtonsForm.querySelector('input[name="id"]');
  if (!hiddenInput) {
    console.warn("No hidden input[name='id'] found in desktop buy-buttons form");
    return;
  }
  
  var variantPickerEl = document.getElementById('variant-selects-{{ section.id }}');
  if (!variantPickerEl) {
    console.warn("No variant-picker element found with id: variant-selects-{{ section.id }}");
    return;
  }
  
  var fieldsets = variantPickerEl.querySelectorAll('.product-form__input');
  if (!fieldsets.length) {
    console.warn("No product-form__input fieldsets found in variant-picker");
    return;
  }
  
  function getSelectedOptions() {
    var selected = [];
    fieldsets.forEach(function(fieldset) {
      var select = fieldset.querySelector('select');
      if (select) {
        if (select.value === "") {
          selected.push(null);
        } else {
          selected.push(select.value.trim());
        }
      } else {
        var radios = fieldset.querySelectorAll('input[type="radio"]');
        var found = false;
        radios.forEach(function(radio) {
          if (radio.checked) {
            selected.push(radio.value.trim());
            found = true;
          }
        });
        if (!found) {
          selected.push(null);
        }
      }
    });
    return selected;
  }
  
  function findVariant(selectedOptions) {
    return productData.variants.find(function(variant) {
      return variant.options.every(function(opt, idx) {
        return String(selectedOptions[idx]).toLowerCase() === String(opt).toLowerCase();
      });
    });
  }
  
  function updateVariant() {
    var selectedOptions = getSelectedOptions();
    var matchingVariant = findVariant(selectedOptions);
    if (matchingVariant) {
      hiddenInput.value = matchingVariant.id;
      hiddenInput.dispatchEvent(new Event('change', { bubbles: true }));
      
      // If the variant has a featured_media, scroll the slider to its image
      if (matchingVariant.featured_media && matchingVariant.featured_media.id) {
        var containerEl = document.getElementById('ImageScrollContainer-{{ section.id }}');
        var slidesContainer = document.getElementById('MainImages-{{ section.id }}');
        if (containerEl && slidesContainer) {
          var targetSlide = slidesContainer.querySelector('.main-image-slide[data-media-id="' + matchingVariant.featured_media.id + '"]');
          if (targetSlide) {
            containerEl.scrollTo({
              top: targetSlide.offsetTop,
              behavior: 'smooth'
            });
          }
        }
      }
    } else {
      console.warn("No matching variant found for options:", selectedOptions);
    }
  }
  
  fieldsets.forEach(function(fieldset) {
    var elements = fieldset.querySelectorAll('input, select');
    elements.forEach(function(el) {
      el.addEventListener('change', updateVariant);
    });
  });
});
</script>

<!-- Swatch Active State Script for Desktop -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  var swatchFieldsets = document.querySelectorAll('.product-form__input--swatch');
  swatchFieldsets.forEach(function(fieldset) {
    var radios = fieldset.querySelectorAll('input[type="radio"]');
    
    // Mark whichever is checked by default
    radios.forEach(function(radio) {
      if (radio.checked) {
        radio.nextElementSibling.classList.add('active');
      }
    });
    
    // If none is checked, check the first radio & set it active
    var hasChecked = fieldset.querySelector('input[type="radio"]:checked');
    if (!hasChecked && radios.length > 0) {
      radios[0].checked = true;
      radios[0].nextElementSibling.classList.add('active');
    }
    
    // Whenever a radio changes, remove .active from all labels, then add it to the changed radio's label
    radios.forEach(function(radio) {
      radio.addEventListener('change', function() {
        fieldset.querySelectorAll('label').forEach(function(label) {
          label.classList.remove('active');
        });
        var label = radio.nextElementSibling;
        if (label) {
          label.classList.add('active');
        }
      });
    });
  });
});
</script>

<!-- Accordion Script -->
<script>
  // Get all accordion buttons
  const accordionButtons = document.querySelectorAll('.accordion-button');

  accordionButtons.forEach((button) => {
    button.addEventListener('click', () => {
      // Toggle the "aria-expanded" attribute
      const expanded = button.getAttribute('aria-expanded') === 'true' || false;
      button.setAttribute('aria-expanded', !expanded);

      // (Optional) Close other accordions if you want only one open at a time
      // accordionButtons.forEach((otherBtn) => {
      //   if (otherBtn !== button) {
      //     otherBtn.setAttribute('aria-expanded', false);
      //   }
      // });
    });
  });
</script>
