{% schema %}
{
  "name": "Sticky Product Bar",
  "settings": [],
  "presets": [
    { "name": "Sticky Product Bar" }
  ]
}
{% endschema %}

{{ 'component-swatch-input.css' | asset_url | stylesheet_tag }}
{{ 'component-swatch.css' | asset_url | stylesheet_tag }}

<div id="sticky-product-bar" class="sticky-bar">
  <div class="sticky-bar-inner">
    <div class="product-title">{{ product.title }}</div>
    <div class="product-price" id="sticky-price">
      {% render 'price', product: product, show_badges: true %}
    </div>
    {% assign color_option = product.options_with_values | where: 'name', 'Color' | first %}
    {% if color_option %}
    <div class="color-swatches">
      {% for value in color_option.values %}
        {% assign id = 'sticky-color-' | append: forloop.index %}
        <label class="swatch-input__wrapper">
          <input type="radio" name="sticky-color" id="{{ id }}" value="{{ value | escape }}" class="visually-hidden">
          {% render 'swatch', swatch: value.swatch, option_value: value %}
        </label>
      {% endfor %}
    </div>
    {% endif %}
    <button id="sticky-add" class="button button--primary" {% if color_option %}disabled{% endif %}>{{ 'products.product.add_to_cart' | t }}</button>
  </div>
</div>

<div id="size-drawer" class="size-drawer">
  <div class="drawer-overlay"></div>
  <div class="drawer-panel">
    <button type="button" class="drawer-close" aria-label="Close">&times;</button>
    <h3>Select size</h3>
    <div class="size-options"></div>
  </div>
</div>

<script>
var productData = {{ product | json }};
var colorOptionIndex = productData.options.findIndex(function(o){ return o.name.toLowerCase() === 'color'; });
var sizeOptionIndex = productData.options.findIndex(function(o){ return o.name.toLowerCase() === 'size'; });
var selectedColor = null;
var addBtn = document.getElementById('sticky-add');

if(colorOptionIndex !== -1){
  document.querySelectorAll('input[name="sticky-color"]').forEach(function(el){
    el.addEventListener('change', function(){
      selectedColor = this.value;
      addBtn.disabled = false;
      updatePrice();
    });
  });
}

addBtn.addEventListener('click', function(){
  if(sizeOptionIndex !== -1){
    openSizeDrawer();
  } else {
    var variant = getVariant(selectedColor, null) || productData.variants[0];
    addVariantToCart(variant.id);
  }
});

document.querySelector('#size-drawer .drawer-overlay').addEventListener('click', closeSizeDrawer);
document.querySelector('#size-drawer .drawer-close').addEventListener('click', closeSizeDrawer);

function openSizeDrawer(){
  var drawer = document.getElementById('size-drawer');
  var container = drawer.querySelector('.size-options');
  container.innerHTML = '';
  var sizes = [];
  productData.variants.forEach(function(v){
    if(colorOptionIndex === -1 || v.options[colorOptionIndex] === selectedColor){
      var size = v.options[sizeOptionIndex];
      if(sizes.indexOf(size) === -1 && v.available){ sizes.push(size); }
    }
  });
  sizes.forEach(function(size){
    var btn = document.createElement('button');
    btn.className = 'size-option button button--primary';
    btn.textContent = size;
    btn.addEventListener('click', function(){
      var variant = getVariant(selectedColor, size);
      if(variant){
        addVariantToCart(variant.id);
        closeSizeDrawer();
      }
    });
    container.appendChild(btn);
  });
  drawer.classList.add('open');
}

function closeSizeDrawer(){
  document.getElementById('size-drawer').classList.remove('open');
}

function getVariant(color, size){
  return productData.variants.find(function(v){
    var match = true;
    if(colorOptionIndex !== -1 && color) match = match && v.options[colorOptionIndex] === color;
    if(sizeOptionIndex !== -1 && size) match = match && v.options[sizeOptionIndex] === size;
    return match;
  });
}

function addVariantToCart(variantId){
  fetch('/cart/add.js', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ id: variantId, quantity: 1 })
  }).then(function(){ window.location.href = '/cart'; });
}

function updatePrice(){
  var variant = getVariant(selectedColor, null);
  if(variant){
    var priceEl = document.getElementById('sticky-price');
    var price = Shopify.formatMoney(variant.price, window.Shopify.currency);
    var compare = variant.compare_at_price && variant.compare_at_price > variant.price ? Shopify.formatMoney(variant.compare_at_price, window.Shopify.currency) : null;
    priceEl.innerHTML = compare ? '<span class="price-item price-item--regular"><s>' + compare + '</s></span> <span class="price-item price-item--sale">' + price + '</span>' : price;
  }
}
</script>

<style>
#sticky-product-bar{position:fixed;bottom:0;left:0;width:100%;background:#fff;box-shadow:0 -1px 10px rgba(0,0,0,0.1);padding:10px;display:flex;align-items:center;gap:10px;z-index:1000;}
#sticky-product-bar .product-title{flex:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-weight:bold;}
.color-swatches{display:flex;gap:4px;}
.color-swatches .swatch{cursor:pointer;}
#sticky-add{flex-shrink:0;}
#size-drawer{display:none;position:fixed;top:0;left:0;right:0;bottom:0;z-index:1100;}
#size-drawer.open{display:block;}
#size-drawer .drawer-overlay{position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,0.5);}
#size-drawer .drawer-panel{position:absolute;bottom:0;left:0;right:0;background:#fff;padding:20px;border-radius:8px 8px 0 0;max-height:80%;overflow-y:auto;}
#size-drawer .drawer-close{position:absolute;top:10px;right:10px;background:none;border:none;font-size:1.5rem;}
#size-drawer .size-option{width:100%;margin:5px 0;}
@media(min-width:750px){#sticky-product-bar{display:none;}}
</style>
